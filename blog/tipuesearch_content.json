{"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/yuhao-08/wcm2024 網站: https://yuhao-08.github.io/wcm2024/ 簡報: https://yuhao-08.github.io/wcm2024/reveal/a> 網誌: https://yuhao-08.github.io/wcm2024/blog/","tags":"misc","url":"./pages/about/"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統1 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"},{"title":"w13課程整理","text":"w13 1.guess_game.7z 是在 AI 輔助下, 將簡單的單人 Brython 線上猜數字遊戲 轉化為可以多人同場比賽猜數字的線上遊戲. 2.由於使用 Flask, 直接啟動模式僅用於程式開發, 若要部署在 Windows 或 Linux 電腦上, 還需進行下列考量","tags":"w13","url":"./w13課程整理.html"},{"title":"w1課程整理","text":"w1 1.網際內容管理課程學員上課時必須登入Teams 中上課, 一邊觀看教學示範, 一邊自行操作. 2.網際內容管理課程的 MS 團隊代碼: ry8vdyo 3.登入 Github -連接至 https://github.com/mdecycu/cmsimde_site-建立個人的 wcm2024 倉儲。","tags":"w1","url":"./w1課程整理.html"},{"title":"w2課程整理","text":"w2 1.主要是利用Codespaces維護網站，每天平均僅能使用兩個小時。 2.採用 Github Codespaces 維護網站的好處是介面提供多終端機與多 ports 開啟功能。","tags":"w2","url":"./w2課程整理.html"},{"title":"w3課程整理","text":"w3 ① 利用github classroom來分組 ② git 的用法 ③ 利用Codespaces維護分組網站及網頁","tags":"w3","url":"./w3課程整理.html"},{"title":"w4課程整理","text":"w4 ①複習w3的內容 ②需下載main2.txt 和static.txt 在倉儲中建立兩個檔案 ③只要在 Shell 執行 python3 main2.py---執行靜態 python3 main.py ---執行動態 ctrl + c, c 代表 cancle 也就是取消 ④replit分組倉儲權限必須自行在 /home/runner/.ssh 目錄下建立 id_rsa 與 config (id_rsa.pub 必須登錄到 Github 對應帳號), 其中的 config 內容為: 1 2 3 Host github.com User git Hostname github.com","tags":"w4","url":"./w4課程整理.html"},{"title":"w5課程整理","text":"w5 1.複習w3的分組倉儲權限設定影片","tags":"w5","url":"./w5課程整理.html"},{"title":"w6課程整理","text":"A. git 的發展歷史 2005 年：Git 誕生。 Linus Torvalds 建立Git，並在Linux 核心開發中開始使用它。 2005 年：首個公開發布。 2006 年：引進GitHub。 廣泛的使用情境。 2007 年：Git 1.5 發布。這個版本引入了一些重要的特性，包括git-config等指令，以及git-svn工具。 2008 年：Git 1.6 發布。此版本引入了git-clone命令的改進，以及git-rerere工具用於解決衝突。 2009 年：Git 1.6.3 發布。這個版本引入了git bisect指令，用於二分查找引入Bug 的提交。 2012 年：Git 1.8 發布。這個版本引入了git-merge和git-push的改進，以及對子模組的改進。 2014 年：Git 2.0 發布。這個版本引入了一些重大變化，包括預設使用push.default = simple 和預設情況下移除git submodule 中的.gitmodule 檔案。 2016 年：Git 2.10 發布。這個版本引入了多種新特性，包括改進的git rebase，新的git worktree命令等。 2018 年：Git 2.19 發布。這個版本引入了git switch和git restore命令，用於替代git checkout。 2020 年：Git 2.29 發布。這個版本引入了git sparse-checkout命令，允許使用者只檢出倉庫的一部分文件。 2022 年：仍在進行中 B.創作人的相關履歷 1.Git 的創辦人是Linus Torvalds，他是一位著名的電腦程式設計師，同時也是Linux 核心的創作者 2.經歷： Linux 核心開發者（1991年至今） ⓵創建並領導Linux 核心項目，負責開發和維護Linux 核心。 ②吸引了全球數千名開發者的參與，使Linux 成為最受歡迎的開源作業系統之一。 ③建立Git 分散式版本控制系統，並在Linux 核心開發中開始使用它。 ④為了解決Linux 核心開發過程中遇到的問題，例如處理大規模程式碼庫和多人協作等，而設計了Git。 C. git 解決內容管理問題 1.對於一般的專業人士，無論是軟體開發者、寫作者、設計師或其他領域的從業者，Git 都可以作為一個強大的工具來解決內容管理問題 ①版本控制: 使用Git 可以輕鬆追蹤檔案的變更歷史，從而方便回溯到先前的版本。 ②協作合作: 多人協作時，Git 提供了分支和合併的功能，可以讓團隊成員在不干擾彼此的情況下並行工作。 ③備份與同步: 使用Git 可以輕鬆地將檔案備份到遠端倉庫，並確保資料的安全性和可靠性。 ④程式碼審查與回饋: Git 提供了程式碼審查工具，團隊成員可以透過提交程式碼並要求審查來進行程式碼品質控制 ⑤專案管理: Git 倉庫可以與專案管理工具（如Jira、Trello等）集成，幫助團隊追蹤任務、問題和進度，提高專案管 理的效率和透明度。","tags":"w6","url":"./w6課程整理.html"}]}